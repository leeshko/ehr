{"version":3,"sources":["components/entrance/modalBIN.module.css","components/entrance/registerBloc.module.css","components/entrance/modalECP.module.css","components/entrance/entrance.module.css","components/entrance/firstRegScreen.module.css","components/entrance/radioSelect.module.css","components/entrance/checkBoxSq.module.css","components/entrance/text.module.css","components/entrance/selectButton.module.css","components/entrance/smallButton.module.css","components/entrance/checkBox.module.css","components/entrance/passwordModal.module.css","components/entrance/errorModal.module.css","components/entrance/Text.js","components/entrance/RadioSelect.js","components/entrance/SelectButton.js","components/entrance/RegisterBlock.js","components/entrance/SmallButton.js","components/entrance/ModalECP.js","components/entrance/ModalBIN.js","components/entrance/FirstRegScreen.js","components/entrance/EnterAccBlock.js","components/entrance/Checkbox.js","components/entrance/PasswordModal.js","components/entrance/CheckboxSq.js","components/entrance/RegisterBlockEnter.js","components/entrance/EmployerRegScreen.js","components/entrance/WorkerRegScreen.js","components/entrance/ConfirmationCode.js","components/entrance/errorModal.js","components/entrance/Entrance.js","App.js","index.js"],"names":["module","exports","Buttons","children","className","s","textEnter","RadioSelect","loginWay","onChange","type","radio","value","id","name","htmlFor","SelectButton","showEntranceForm","assign","job","communication","btn","onClick","undefined","RegisterBlock","register","noAcc","href","regAcc","SmallButton","width","style","ModalECP","closeModal","modalFrame","modal","cross","modalContainer","modalText","inputBlock","labelName","inputField","placeholder","buttonsRaw","btnNotActive","showError","setShowError","regexpBIN","inputFieldError","e","result","test","target","onblur","onfocus","isBinPattern","forgetPass","buttonPosition","FirstRegScreen","goToEmployer","goToWorker","buttonBlock","buttonInside","EnterAccBlock","Checkbox","displayEmail","checkbox","for","PasswordModal","CheckboxSq","customCheckbox","EmployerRegScreen","useState","showEmail","setShowEmail","showPassModal","setShowPassModal","modalShow","maxLength","inputFieldAuto","disabled","checkboxRow","checked","imgInfo","agreement","RegisterBlockEnter","WorkerRegScreen","maxlength","ConfirmationCode","text","codeField","inputFieldSmall","ErrorModal","error","Entrance","selectedLoginWay","setselectedLoginWay","screenShow","setScreenShow","console","log","mainWindow","leftSide","wrapper","back","Text","ModalBIN","rightSideReg","rightSide","quaterRound","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b066a44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"modalBIN_modalContainer__3BZjW\",\"modalText\":\"modalBIN_modalText__2cCot\",\"labelInput\":\"modalBIN_labelInput__XFZmi\",\"inputBlock\":\"modalBIN_inputBlock__1LXvF\",\"labelName\":\"modalBIN_labelName__90PrU\",\"inputField\":\"modalBIN_inputField__1ZwZS\",\"inputFieldError\":\"modalBIN_inputFieldError__1Gkpl\",\"inputFieldAuto\":\"modalBIN_inputFieldAuto__Y54r4\",\"forgetPass\":\"modalBIN_forgetPass__2pdmi\",\"buttonPosition\":\"modalBIN_buttonPosition__2fZFL\",\"checkboxRow\":\"modalBIN_checkboxRow__3yIWT\",\"imgInfo\":\"modalBIN_imgInfo__1oqwc\",\"agreement\":\"modalBIN_agreement__226Pa\",\"codeField\":\"modalBIN_codeField__2lZxl\",\"inputFieldSmall\":\"modalBIN_inputFieldSmall__1IkJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noAcc\":\"registerBloc_noAcc__34bfK\",\"regAcc\":\"registerBloc_regAcc__QqucI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalFrame\":\"modalECP_modalFrame__B41Kz\",\"modal\":\"modalECP_modal__HuZqg\",\"cross\":\"modalECP_cross__et3iP\",\"modalContainer\":\"modalECP_modalContainer__1dxLk\",\"modalText\":\"modalECP_modalText__8CJSP\",\"labelInput\":\"modalECP_labelInput__1VVYj\",\"inputBlock\":\"modalECP_inputBlock__3JGPg\",\"labelName\":\"modalECP_labelName__2jAa3\",\"inputField\":\"modalECP_inputField__3ou3V\",\"buttonsRaw\":\"modalECP_buttonsRaw__1Ng3Q\",\"btnNotActive\":\"modalECP_btnNotActive__3PqJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWindow\":\"entrance_mainWindow__3pbTo\",\"leftSide\":\"entrance_leftSide__16bRb\",\"rightSide\":\"entrance_rightSide__ymrAz\",\"rightSideReg\":\"entrance_rightSideReg__3z71C\",\"quaterRound\":\"entrance_quaterRound__dPlua\",\"wrapper\":\"entrance_wrapper__4kVpo\",\"back\":\"entrance_back__3SREX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonBlock\":\"firstRegScreen_buttonBlock__2QIGM\",\"buttonInside\":\"firstRegScreen_buttonInside__2IQLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"radioSelect_radio__22r59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCheckbox\":\"checkBoxSq_customCheckbox__1GGpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textEnter\":\"text_textEnter__36QbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"selectButton_btn__2mm1Q\",\"fadeIn\":\"selectButton_fadeIn__2X-B-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"smallButton_btn__piYIA\",\"btnNotActive\":\"smallButton_btnNotActive__1a4_9\",\"fadeIn\":\"smallButton_fadeIn__183LI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"checkBox_checkbox__1ebQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"passwordModal_modal__2i3Ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"errorModal_error__1G9RV\"};","import s from './text.module.css';\r\nconst Buttons = ({children}) => {\r\n    return (\r\n        <>\r\n        <div className={s.textEnter}>{children}</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Buttons;","import s from './radioSelect.module.css';\r\nimport React from 'react';\r\n\r\nconst RadioSelect = ({loginWay}) => {\r\n    \r\n    return (\r\n        <div onChange={loginWay}>\r\n            <input type='radio' className={s.radio} value='bin' id=\"radio1\" name='entranceType' />\r\n            <label htmlFor=\"radio1\">По БИН/ИИН</label>\r\n\r\n            <input type='radio' className={s.radio} value='ecp' id=\"radio2\" name='entranceType' />\r\n            <label htmlFor=\"radio2\">По ЭЦП</label>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioSelect;","import s from '../../components/entrance/selectButton.module.css';\r\n\r\nconst SelectButton = ({ showEntranceForm, children, assign, job, communication }) => {\r\n    \r\n    return (\r\n        <button className={s.btn} onClick={showEntranceForm} onClick={() => {\r\n            if (job !== undefined) {\r\n                assign(job, communication)\r\n            } else {\r\n            showEntranceForm();}\r\n        }\r\n\r\n        } >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SelectButton;","import s from './registerBloc.module.css';\r\n\r\nconst RegisterBlock = ({register}) => {\r\n\r\n    return (\r\n        <div className={s.register}>\r\n            <span className={s.noAcc}>Еще нет аккаунта?</span>\r\n            <a href=\"#\" className={s.regAcc} onClick={register}>Зарегистрируйтесь.</a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterBlock;","import s from '../../components/entrance/smallButton.module.css';\r\n\r\nconst SmallButton = ({ children, width }) => {\r\n    return (\r\n        <button className={s.btn} style={width}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SmallButton;","import s from './modalECP.module.css';\r\nimport SmallButton from './SmallButton';\r\n\r\nconst ModalECP = ({ closeModal }) => {\r\n    return (\r\n        <>\r\n            <div className={s.modalFrame}></div>\r\n            <div className={s.modal}>\r\n                <span className={s.cross} onClick={closeModal}></span>\r\n\r\n                <div className={s.modalContainer}>\r\n\r\n                    <div className={s.modalText}>Введите пароль к ЭЦП</div>\r\n\r\n                    <div className={s.inputBlock}>\r\n                        <form>\r\n                            <label className={s.labelName}>\r\n                                Пароль\r\n                                <input className={s.inputField} placeholder='Введите ваш пароль к ЭЦП' type=\"text\" name=\"name\" />\r\n                            </label>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                    <div className={s.buttonsRaw}>\r\n                        <div className={s.btnNotActive}>\r\n                            <span>Отмена</span>\r\n                        </div>\r\n\r\n                        <SmallButton>\r\n                            <p>Далее</p>\r\n                        </SmallButton>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalECP;","import s from './modalBIN.module.css';\r\nimport SmallButton from './SmallButton';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\nconst ModalECP = ({ showError, setShowError}) => {\r\n\r\n    const regexpBIN = /^[0-9]{12}$/;\r\n\r\n    const isBinPattern = (e) => {\r\n\r\n        let result = regexpBIN.test(e.target.value);\r\n        e.target.onblur = function () {\r\n            if (result) {\r\n                setShowError(false);\r\n            } else {\r\n                setShowError(true);\r\n            }\r\n        };\r\n        e.target.onfocus = function () {\r\n            setShowError(false);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.modalContainer}>\r\n                <div className={s.inputBlock}>\r\n                    <form>\r\n                        <label>\r\n                            <div className={s.labelName}>БИН/ИИН</div>\r\n                            <input className={showError ? s.inputFieldError : s.inputField} placeholder='Введите 12 цифр' type={'number'}\r\n                                name=\"BIN\"\r\n                                onChange={(e) => {\r\n                                    isBinPattern(e)}}\r\n                            />\r\n                        </label>\r\n\r\n                        <label>\r\n                            <div className={s.labelName}>Пароль</div>\r\n                            <input className={s.inputField} placeholder='Введите свой пароль' type=\"password\" name=\"password\" />\r\n                        </label>\r\n                    </form>\r\n\r\n                    <div className={s.forgetPass}>Забыли пароль?</div>\r\n                    <div className={s.buttonPosition}>\r\n                        <SmallButton>\r\n                            <p>Войти в кабинет</p>\r\n                        </SmallButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalECP;","import SmallButton from \"./SmallButton\";\r\nimport s from './firstRegScreen.module.css';\r\n\r\n\r\nconst FirstRegScreen = ({ goToEmployer, goToWorker }) => {\r\n\r\n    return (\r\n        <div className={s.buttonBlock} >\r\n            <SmallButton >\r\n                <div className={s.buttonInside} onClick={goToEmployer}>\r\n                    <p> Я - работодатель</p>\r\n                </div>\r\n            </SmallButton>\r\n\r\n            <SmallButton >\r\n                <div className={s.buttonInside} onClick={goToWorker}>\r\n                    <p>Я - работник</p>\r\n\r\n                </div>\r\n\r\n            </SmallButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstRegScreen;","import s from './registerBloc.module.css';\r\n\r\nconst EnterAccBlock = ({register}) => {\r\n\r\n    return (\r\n        <div className={s.register}>\r\n            <span className={s.noAcc}>Уже есть аккаунт?</span>\r\n            <a href=\"#\" className={s.regAcc} onClick={register}>Войдите.</a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EnterAccBlock;","import s from './checkBox.module.css';\r\n\r\nconst Checkbox = ({ displayEmail }) => {\r\n    \r\n    return (\r\n        <div onChange={displayEmail}>\r\n            <input type=\"checkbox\" className={s.checkbox} id=\"checkbox\" />\r\n            <label for=\"checkbox\"></label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox;","import s from './passwordModal.module.css';\r\n\r\nconst PasswordModal = () => {\r\n    return (\r\n            <div className={s.modal} >\r\n            Пароль должен содержать не менее 8 символов и состоять из строчных, заглавных букв и цифр.\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PasswordModal;","import s from './checkBoxSq.module.css';\r\n\r\nconst CheckboxSq = ({children}) => {\r\n\r\n    return (\r\n        <div className={s.checkbox}>\r\n            <label className={s.customCheckbox}>\r\n                <input type=\"checkbox\" name=\"color-1\" value=\"indigo\"></input>\r\n                <span>{children}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckboxSq;","import s from './registerBloc.module.css';\r\n\r\nconst RegisterBlock = ({register}) => {\r\n\r\n    return (\r\n        <div className={s.register}>\r\n            <span className={s.noAcc}>Уже есть аккаунт?</span>\r\n            <a href=\"#\" className={s.regAcc} onClick={register}>Войдите.</a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterBlock;","import React, {useState} from 'react';\r\nimport s from './modalBIN.module.css';\r\nimport SelectButton from './SelectButton';\r\nimport Checkbox from './Checkbox';\r\nimport PasswordModal from './PasswordModal';\r\nimport CheckboxSq from './CheckboxSq';\r\nimport RegisterBlockEnter from './RegisterBlockEnter';\r\n\r\n\r\nconst EmployerRegScreen = ({ assign, showError, setShowError }) => {\r\n\r\n\r\n    const [showEmail, setShowEmail] = useState(false);\r\n    const [showPassModal, setShowPassModal] = useState(false);\r\n\r\n    const regexpBIN = /^[0-9]{12}$/;\r\n\r\n    const displayEmail = (e) => {\r\n        setShowEmail(e.target.checked);\r\n    }\r\n\r\n    const modalShow = () => {\r\n        setShowPassModal(!showPassModal)\r\n    }\r\n\r\n    const isBinPattern = (e) => {\r\n\r\n        let result = regexpBIN.test(e.target.value);\r\n        e.target.onblur = function () {\r\n            if (result) {\r\n                setShowError(false);\r\n            } else {\r\n                setShowError(true);\r\n            }\r\n        };\r\n        e.target.onfocus = function () {\r\n            setShowError(false);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.modalContainer}>\r\n                <div className={s.inputBlock}>\r\n                    <form>\r\n                        <label>\r\n                            <div className={s.labelName}>БИН/ИИН</div>\r\n                            <input className={s.inputField} placeholder='Введите 12 цифр' type=\"number\" maxLength=\"8\" name=\"BIN\" \r\n                                onChange={(e) => {\r\n                                    isBinPattern(e)\r\n                                }}/>\r\n                        </label>\r\n\r\n                        <label>\r\n                            <div className={s.labelName}>Полное наименование</div>\r\n                            <input className={s.inputFieldAuto} placeholder='Заполняется автоматически после ввода БИН/ИИН' disabled type=\"text\" name=\"name\" />\r\n                        </label>\r\n\r\n                        <label>\r\n                            <div className={s.labelName}></div>\r\n                            <div className={s.checkboxRow}>\r\n                                <div className={s.labelName}>Телефон</div>\r\n                                <Checkbox displayEmail={displayEmail}/>\r\n                                <div className={s.labelName}>E-mail</div>\r\n                            </div>\r\n                            <input className={s.inputField} placeholder={!showEmail ? '+7 (_ _ _) - _ _ _ - _ _ - _ _' : 'e-mail'} type=\"number\" name=\"number\" />\r\n                        </label>\r\n                        <label>\r\n                            \r\n                            {showPassModal ? <PasswordModal /> : null}\r\n                            <div className={s.labelName}>Придумайте пароль \r\n                                <span className={s.imgInfo} onClick={modalShow} ></span>\r\n                            </div>\r\n                            <input className={s.inputField} placeholder='Введите свой пароль' type=\"password\" name=\"password\" />\r\n                        </label>\r\n                        <label>\r\n                            {showPassModal ? <PasswordModal /> : null}\r\n                            <div className={s.labelName}>Повторите пароль\r\n                                <span className={s.imgInfo} onClick={modalShow} ></span>\r\n                            </div>\r\n                            <input className={s.inputField} placeholder='ABab1234' type=\"password\" name=\"password\" />\r\n                        </label>\r\n                    </form>\r\n                        <CheckboxSq>\r\n                        <p>Согласен/на <a href=\"#\" className={s.agreement}>с пользовательским соглашением</a> и даю согласие на сбор и обработку своих персональных данных</p>\r\n                        </CheckboxSq>\r\n                        <a></a>\r\n                    <div className={s.buttonPosition}>\r\n                        <SelectButton \r\n                            communication={showEmail ? 'email' : 'phone'}\r\n                            assign={assign}\r\n                            job={'employer'}\r\n                            >\r\n                                \r\n                            <p>Подписать ЭЦП и продолжить</p>\r\n                        </SelectButton>    \r\n                    </div>\r\n                    <RegisterBlockEnter />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployerRegScreen;","import React, {useState} from 'react'\r\nimport s from './modalBIN.module.css';\r\nimport SelectButton from './SelectButton';\r\nimport Checkbox from './Checkbox';\r\nimport PasswordModal from './PasswordModal';\r\nimport CheckboxSq from './CheckboxSq';\r\nimport RegisterBlockEnter from './RegisterBlockEnter';\r\n\r\n\r\nconst WorkerRegScreen = ({assign}) => {\r\n\r\n    const [showEmail, setShowEmail] = useState(false);\r\n    const [showPassModal, setShowPassModal] = useState(false);\r\n\r\n    const displayEmail = (e) => {\r\n        setShowEmail(e.target.checked);\r\n    }\r\n\r\n    const modalShow = () => {\r\n        setShowPassModal(!showPassModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.modalContainer}>\r\n                <div className={s.inputBlock}>\r\n                    <form>\r\n                        <label>\r\n                            <div className={s.labelName}>ИИН</div>\r\n                            <input className={s.inputField} placeholder='Введите 12 цифр' type=\"number\" maxlength=\"8\" name=\"BIN\" />\r\n                        </label>\r\n\r\n                        <label>\r\n                            <div className={s.labelName}>Фамилия, имя и отчество (если есть)</div>\r\n                            <input className={s.inputFieldAuto} placeholder='Заполняется автоматически после ввода ИИН' disabled type=\"text\" name=\"name\" />\r\n                        </label>\r\n\r\n                        <label>\r\n                            <div className={s.labelName}></div>\r\n                            <div className={s.checkboxRow}>\r\n                                <div className={s.labelName}>Телефон</div>\r\n                                <Checkbox displayEmail={displayEmail}/>\r\n                                <div className={s.labelName}>E-mail</div>\r\n                            </div>\r\n                            <input className={s.inputField} placeholder={!showEmail ? '+7 (_ _ _) - _ _ _ - _ _ - _ _' : 'example@gmail.com'} type=\"number\" name=\"number\" />\r\n                        </label>\r\n                        <label>\r\n                            \r\n                            {showPassModal ? <PasswordModal /> : null}\r\n                            <div className={s.labelName}>Придумайте пароль \r\n                                <span className={s.imgInfo} onClick={modalShow} ></span>\r\n                            </div>\r\n                            <input className={s.inputField} placeholder='Введите свой пароль' type=\"password\" name=\"password\" />\r\n                        </label>\r\n                        <label>\r\n                            {showPassModal ? <PasswordModal /> : null}\r\n                            <div className={s.labelName}>Повторите пароль\r\n                                <span className={s.imgInfo} onClick={modalShow} ></span>\r\n                            </div>\r\n                            <input className={s.inputField} placeholder='ABab1234' type=\"password\" name=\"password\" />\r\n                        </label>\r\n                    </form>\r\n                        <CheckboxSq>\r\n                        <p>Согласен/на <a href=\"#\" className={s.agreement}>с пользовательским соглашением</a> и даю согласие на сбор и обработку своих персональных данных</p>\r\n                        </CheckboxSq>\r\n                        <a></a>\r\n                    <div className={s.buttonPosition}>\r\n                        <SelectButton\r\n                            communication={showEmail ? 'email' : 'phone'}\r\n                            assign={assign}\r\n                            job={'employer'}\r\n                        >\r\n\r\n                            <p>Подписать ЭЦП и продолжить</p>\r\n                        </SelectButton>\r\n                    </div>\r\n                    <RegisterBlockEnter />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkerRegScreen;","import s from './modalBIN.module.css';\r\nimport SmallButton from './SmallButton';\r\n\r\nconst ConfirmationCode = ({ children, text }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={s.modalContainer}>\r\n                <div className={s.inputBlock}>\r\n                    <h3>{children}</h3>\r\n                    <form>\r\n                        <label>\r\n                            <div className={s.labelName}>{text}</div>\r\n                            <div className={s.codeField}>\r\n                                <input className={s.inputFieldSmall} placeholder='1234' type=\"number\" name=\"BIN\" />\r\n                                <SmallButton \r\n                                    width={{width: '200px'}}\r\n                                >\r\n                                    <p>Подтвердить и войти</p>\r\n                                </SmallButton>\r\n\r\n                            </div>\r\n                        </label>\r\n                        <div className={s.labelName}>Выслать код повторно через 29 c</div>     \r\n                    </form> \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfirmationCode;","import s from '../../components/entrance/errorModal.module.css';\r\n\r\nconst ErrorModal = ({ children }) => {\r\n    return (\r\n        <div className={s.error}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import React, { useState } from 'react';\r\nimport s from './entrance.module.css';\r\nimport Text from './Text';\r\nimport RadioSelect from './RadioSelect';\r\nimport SelectButton from './SelectButton';\r\nimport RegisterBlock from './RegisterBlock';\r\nimport ModalECP from './ModalECP';\r\nimport ModalBIN from './ModalBIN';\r\nimport FirstRegScreen from './FirstRegScreen';\r\nimport EnterAccBlock from './EnterAccBlock';\r\nimport EmployerRegScreen from './EmployerRegScreen';\r\nimport WorkerRegScreen from './WorkerRegScreen';\r\nimport ConfirmationCode from './ConfirmationCode';\r\nimport ErrorModal from './errorModal';\r\n\r\n\r\nconst Entrance = () => {\r\n\r\n    const [selectedLoginWay, setselectedLoginWay] = useState('');\r\n    const [screenShow, setScreenShow] = useState('start');\r\n    const [showError, setShowError] = useState(() => false);\r\n\r\n    const loginWay = (e) => {\r\n        if (e.target.value === 'ecp') {\r\n            setselectedLoginWay('ecp');\r\n        } else if (e.target.value === 'bin') {\r\n            setselectedLoginWay('bin');\r\n        }\r\n    }\r\n\r\n    const showEntranceForm = () => {\r\n        console.log('showform')\r\n        if (selectedLoginWay === 'ecp') {\r\n            setScreenShow('ecp');\r\n        } else if (selectedLoginWay === 'bin') {\r\n            setScreenShow('bin');\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setScreenShow('start');\r\n    }\r\n\r\n    const register = () => {\r\n        setScreenShow('register')\r\n    }\r\n\r\n    const goToEmployer = () => {\r\n        setScreenShow('employerReg');\r\n    }\r\n    const goToWorker = () => {\r\n        console.log('worker')\r\n        setScreenShow('workerReg');\r\n    }\r\n\r\n    const moveBack = () => {\r\n\r\n        switch (screenShow) {\r\n            case 'start':\r\n                // future action\r\n                break;\r\n            case 'ecp':\r\n                setScreenShow('start');\r\n                break;\r\n            case 'bin':\r\n                setScreenShow('start');\r\n                break;\r\n            case 'register':\r\n                setScreenShow('start');\r\n                break;\r\n            case 'employerReg':\r\n                setScreenShow('register');\r\n                break;\r\n            case 'workerReg':\r\n                setScreenShow('register');\r\n                break;\r\n            default:\r\n                setScreenShow('start');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const assign = (job, communication) => {\r\n        console.log(`${job}`, `${communication}`)\r\n        if (job === 'employer' && communication === 'phone') {\r\n            setScreenShow('assignPhoneEmpl');\r\n        } else if (job === 'employer' && communication === 'email') {\r\n            setScreenShow('assignEmailEmpl');\r\n        } else if (job === 'worker' && communication === 'phone') {\r\n            setScreenShow('assignPhoneWork');\r\n        } else if (job === 'worker' && communication === 'email') {\r\n            setScreenShow('assignEmailWork');\r\n        }\r\n    }\r\n\r\n    let backArrow = '\\u003c';\r\n\r\n    return (\r\n        <>\r\n            {showError ?\r\n                <ErrorModal>\r\n                    {(screenShow === 'bin' || screenShow === 'employerReg') && <div>Введен неверный БИН/ИИН</div>}\r\n                </ErrorModal> : null}\r\n            <div className={s.mainWindow}>\r\n                <div className={s.leftSide}>\r\n                    <div className={s.wrapper}>\r\n                        <div className={s.back} onClick={moveBack}> {backArrow} Назад</div>\r\n                        <Text>\r\n                            {screenShow === 'start' || screenShow === 'ecp' || screenShow === 'bin' ? <p>Вход</p> : null}\r\n                            {screenShow === 'register' ? <p>Регистрация</p> : null}\r\n                            {screenShow === 'assignPhoneEmpl' || screenShow === 'assignEmailEmpl'\r\n                                || screenShow === 'assignPhoneWork'\r\n                                || screenShow === 'assignEmailWork'\r\n                                ? <p>Код подтверждения</p> : null}\r\n\r\n                        </Text>\r\n\r\n                        {screenShow === 'start' || screenShow === 'ecp' ?\r\n                            <RadioSelect\r\n                                loginWay={loginWay}\r\n                            /> : null}\r\n\r\n                        {screenShow === 'start' || screenShow === 'ecp' ?\r\n\r\n                            <SelectButton\r\n                                showEntranceForm={showEntranceForm}\r\n                            >\r\n                                <p>Выбрать ключ ЭЦП на этом ПК</p>\r\n                            </SelectButton>\r\n\r\n                            : null}\r\n\r\n                        {screenShow === 'bin' && <ModalBIN\r\n                            showError={showError}\r\n                            setShowError={setShowError}\r\n                        />}\r\n\r\n                        {screenShow === 'ecp' ? <ModalECP\r\n                            closeModal={closeModal}\r\n\r\n\r\n                        /> : null}\r\n\r\n                        {screenShow === 'register' && <FirstRegScreen goToEmployer={goToEmployer} goToWorker={goToWorker} />}\r\n\r\n                        {screenShow === 'register' && <EnterAccBlock />}\r\n\r\n                        {screenShow === 'bin' || screenShow === 'ecp' || screenShow === 'start' ? <RegisterBlock register={register} /> : null}\r\n\r\n                        {screenShow === 'employerReg' ?\r\n                            <>\r\n                                <Text>\r\n                                    <p>Регистрация</p>\r\n                                </Text>\r\n                                <h2>Регистрация работодателя</h2>\r\n\r\n                                <EmployerRegScreen\r\n                                    assign={assign}\r\n                                    setShowError={setShowError}\r\n                                />\r\n                            </>\r\n                            : null}\r\n\r\n                        {screenShow === 'workerReg' ?\r\n                            <>\r\n                                <Text>\r\n                                    <p>Регистрация</p>\r\n                                </Text>\r\n                                <h2>Регистрация работника</h2>\r\n\r\n                                <WorkerRegScreen\r\n                                    assign={assign} />\r\n                            </>\r\n                            : null}\r\n\r\n                        {screenShow === 'assignPhoneEmpl' || screenShow === 'assignPhoneWork' ?\r\n\r\n                            <ConfirmationCode text={'Код из СМС'}>\r\n                                <p>На указанный вами номер телефона выслан 4-значный проверочный код. Введите его в поле ниже:</p>\r\n                            </ConfirmationCode>\r\n                            : null}\r\n\r\n                        {screenShow === 'assignEmailEmpl' || screenShow === 'assignPhoneWork' ?\r\n\r\n                            <ConfirmationCode text={'Код из e-mail'}>\r\n                                <p>На указанный вами e-mail выслан 4-значный проверочный код. Введите его в поле ниже:</p>\r\n\r\n                            </ConfirmationCode>\r\n                            : null}\r\n                    </div>\r\n                </div>\r\n                <div className={(screenShow === 'register' || screenShow === 'employerReg' || screenShow === 'workerReg') ? s.rightSideReg : s.rightSide} >\r\n                    <div className={s.quaterRound}></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Entrance;","import Entrance from './components/entrance/Entrance';\n\nfunction App() {\n  return (\n    <div>\n      <Entrance/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}